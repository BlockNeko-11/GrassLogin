plugins {
    id "idea"
    id "java-library"
    id "maven-publish"
    id "com.github.johnrengelman.shadow" version "8.1.1"
}

group = rootProject.maven_group
version = rootProject.artifact_version

base {
    archivesName = rootProject.archives_base_name
}

repositories {
    maven {
        name = "SpigotMC"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }

    // for bungeecord-chat
    maven {
        name = "Sonatype"
        url = "https://oss.sonatype.org/content/repositories/snapshots/"
    }
    maven {
        name = "Jitpack"
        url = "https://jitpack.io/"
    }
    mavenCentral()
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.13-R0.1-SNAPSHOT"

    compileOnly "mysql:mysql-connector-java:8.0.33"
    compileOnly "org.xerial:sqlite-jdbc:3.50.1.0"

    shadow(api("com.github.BlockNeko-11.SimpleDBC:simpledbc-api:1.1.3"))
    shadow(compileOnly("com.github.BlockNeko-11.SimpleDBC:simpledbc-mysql:1.1.3"))
    shadow(compileOnly("com.github.BlockNeko-11.SimpleDBC:simpledbc-sqlite:1.1.3"))

    compileOnly "commons-codec:commons-codec:1.18.0"

    compileOnly "org.jetbrains:annotations:26.0.2"
    annotationProcessor(compileOnly("org.projectlombok:lombok:1.18.36"))
}

processResources {
    inputs.property "version", project.version

    filesMatching("plugin.yml") {
        expand "version": project.version
    }
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    withSourcesJar()
}

jar {
    from("LICENSE")
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}

tasks.withType(Test).configureEach { tsk ->
    tsk.systemProperty "file.encoding", "UTF-8"
}

compileJava.dependsOn clean

shadowJar {
    archiveClassifier.set "shaded"
    configurations = [project.configurations.shadow]
    relocate "io.github.blockneko11.simpledbc", "io.github.blockneko11.grasslogin.lib.simpledbc"
}

build.finalizedBy shadowJar

publishing {
    publications {
        create("MavenJava", MavenPublication) {
            from components.java
            artifactId = rootProject.archives_base_name
        }
    }

    repositories {
        mavenLocal()
        maven {
            name = "Local"
            url = rootProject.buildDir.toPath().resolve("repo").toAbsolutePath().toString()
        }
    }
}
